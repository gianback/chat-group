import { useState } from 'react'
import Head from 'next/head'
import type { GetServerSideProps } from 'next'
import { createServerSupabaseClient } from '@supabase/auth-helpers-nextjs'

import { PlusIcon } from '@/components/atoms'
import { AddNewChannel, Channels, User } from '@/components/molecules'
import { Chat } from '@/components/organisms'

export default function Home() {
  const [isOverlayActive, setIsOverlayActive] = useState(false)

  return (
    <>
      <Head>
        <title>Chat Group</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <div className='min-h-screen flex max-h-screen'>
        <aside className='w-[22.5%] flex-shrink-0 bg-secondary min-w-[20.25rem] flex flex-col'>
          <div
            style={{
              boxShadow: 'var(--shadow)'
            }}
            className='flex justify-between items-center px-8 py-4 h-16'
          >
            <h3 className='text-lg font-bold tracking-[-0.035em]'>Channels</h3>
            <button
              className='text-[#f2f2f2] w-8 h-8 rounded-lg bg-gray-200 flex justify-center items-center p-1'
              onClick={() => setIsOverlayActive(true)}
            >
              <PlusIcon />
            </button>
          </div>
          <Channels />
          <User />
        </aside>
        <main className='flex-grow flex flex-col max-h-screen'>
          <div
            style={{ boxShadow: 'var(--shadow)' }}
            className='h-16 py-4 px-16 flex items-center flex-shrink-0'
          >
            <h1 className='text-lg font-bold tracking-[-0.035em]'>
              FRONT-END DEVELOPERS
            </h1>
          </div>
          {true ? (
            <Chat />
          ) : (
            <div className='flex justify-center items-center text-center flex-grow p-4'>
              <h2 className='text-2xl font-bold'>
                Enter a channel to start chatting! üòÅ
              </h2>
            </div>
          )}
        </main>
      </div>
      <AddNewChannel
        isOverlayActive={isOverlayActive}
        setIsOverlayActive={setIsOverlayActive}
      />
    </>
  )
}

export const getServerSideProps: GetServerSideProps = async (ctx) => {
  const supabase = createServerSupabaseClient(ctx)

  const { data } = await supabase.auth.getSession()
  const { session } = data

  if (!session)
    return {
      redirect: {
        destination: '/login',
        permanent: false
      }
    }

  return {
    props: {
      initialSessions: session,
      user: session.user
    }
  }
}
